
# 关闭ubuntu弹窗错误报告
sudo vim /etc/default/apport
enabled=1改为enabled=0

# 修改ip地址
ifconfig eth0 192.168.14.200 netmask 255.255.255.0

# 查看wifi下的所有设备IP地址
sudo arp-scan -interface wlp5s0 --localnet

pip3 install pycrypto

*  *  * *  *   My Command
分 时 日 月 周   要运行的命令
分: 0-59, 第0分-第59分; */2表示每两分钟;
时: 0-23, 第0点-第23点; */5表示每五个小时;
日: 1-31, 第1天-第31天; 2-10表示第2天-第10天;
月: 1-12, 第1月-第12月; 2,10表示第2月和第10月;
周: 0-6, 第0周表示星期天, 1-6表示星期1到星期6;
*: 表示对应的所有时间段;
/:表示每;
-:表示一个时间段
,:表示和


登录 crondtab 表单 $ crontab -e
查看表单任务列表 $ crontab -l

# 每分钟打印一行 This is a test ! 输出到文件
* * * * * echo -e "This is a test !" > /home/ubuntu/Documents/output/test.out

# 每天凌晨1点清空 lastlog 文件
* 1 * * * echo /dev/null > /var/log/lastlog

# 每一秒执行一次脚本
* * * * * sleep 1 && /home/scripts.sh

* * * * * /home/echoDemo.sh
echoDemo.sh 脚本内容为:

#!/bin/bash
for((i=0; i<=50;i++));do
    echo $i >> ~/Documents/cront/output/test.out
    sleep 1
done


ubuntu编译安装python27
./configure --prefix=路径

如果报错 zipimport.ZipImportError: can't decompress data; zlib not available
解决方法: $ sudo apt-get install zlib1g-dev

报错Can’t connect to HTTPS URL because the SSL module is not available
解决办法: $ sudo apt-get install libssl-dev openssl

libmysqlclient-dev mysql-dev python-dev python-mysqldb libssl-dev

http://archive.cloudera.com/cdh5/cdh/5/


---------------localhost------------------
/home/ubuntu/Env/myPy3/bin/uwsgi --ini /home/ubuntu/PycharmProjects/logFilter/uwsgi/uwsgi.ini

---------------server-------------------
# ---- 手动启动测试 ----
/usr/local/python3/py3env/bin/uwsgi --ini /opt/logFilter/uwsgi/uwsgi.ini

# ---- supervisord 启动命令 ----
/usr/local/python3/py2env/bin/python2 /usr/local/python3/py2env/bin/supervisord -c /usr/local/python3/supervisor/supervisord.conf

# ---- supervisorctl 控制命令 ----
/usr/local/python3/py2env/bin/supervisorctl status`|start`|stop`|restart
/usr/local/python3/py2env/bin/supervisorctl -c /usr/local/python3/supervisor/supervisord.conf

# ---- 关闭 supervisord 与 uwsgi, 并删掉 supervisor.sock 否则无法启动 ----
ps -aux `| grep "supervisord" `|grep -v grep`| cut -c 9-15 `| xargs kill -9; ps -aux `| grep "uwsgi" `|grep -v grep`| cut -c 9-15 `| xargs kill -9; rm -rf /tmp/supervisor.sock; rm -rf /opt/logFilter/uwsgi/uwsgi.pid

scp /home/ubuntu/PycharmProjects/LuQiao/parking2.0/ice_feature/7_Ice_test/clientiCatBo7.py root@192.168.14.137:/opt/

# ----- uwsgi.ini 文件启动 ------
/home/ubuntu/Env/parkingPy27env/bin/uwsgi --ini /home/ubuntu/PycharmProjects/LuQiao/parking2.0/uwsgi/uwsgi.ini

# ----- gunicorn 命令启动 -------
/home/ubuntu/Env/parkingPy27env/bin/gunicorn --chdir "/home/ubuntu/PycharmProjects/LuQiao/parking2.0" -w 1 -b 0.0.0.0:8000 manage:appWeb --worker-class eventlet --log-level debug --backlog 2000 --access-logfile "/home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/access.log" --error-logfile "/home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/error.log"

# ----- gunicorn 指定文件启动 -------
/home/ubuntu/Env/parkingPy27env/bin/gunicorn manage:appWeb -c /home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/gunicorn.conf

ssh -6 root@2001:19f0:5:3c79:5400:01ff:fed7:93dc%wlp5s0


pip2 install -i https://pypi.douban.com/simple/ flask_socketio
pip2 install -i http://pypi.douban.com/simple/ --trusted-host pypi.douban.com  包名

pip3 list --format=columns


https://pvp.qq.com/cp/a20161115tyf/page1.shtml


UPDATE yilu_park.usr_privilege SET url=REPLACE(url, '替换前的值', '替换后的值') WHERE code LIKE "3455-01-01%";
UPDATE yilu_park.usr_privilege SET name='添加', menu_label='添加', target=NULL, remarks=NULL, modify_time=NULL WHERE (code='1aaad2af09c5f7dbe718014f4626a6b8');

# scp 指定端口
scp -P 63737 -r xxx root@192.168.0.151:/usr/local/spm-api/

# 重启网络
sudo /etc/init.d/networking restart && sudo /etc/init.d/network-manager restart

------------------------------temp------------------------
17楼wifi密码: usky05922226199@%
15楼WiFi密码: 05922226199
svn账号密码: xiezh   
analysis地址: svn://192.168.0.212/cdnrepo/02-code/gslb-analysis-api
spm地址: 
151数据库: mysql -uusky -pusky@123456
docker机: root  usky666!#%
堡垒机账号: xiezh  xiezhaoheng
mysql -h 103.118.36.210 -u usky -pusky@123456

数据库移植并初始化: 
python manage.py makemigrations --settings settings.prod
python manage.py migrate --settings settings.prod
python manage.py init_apis --settings settings.prod

gunicorn -w 1 -b 0.0.0.0:9988 wsgi:application --access-logfile "/usr/local/spm-api/var/log/gunicorn-access.log" --error-logfile "/usr/local/spm-api/var/log/gunicorn-error.log" --log-level info --worker-class gevent


sudo /etc/init.d/networking restart && sudo /etc/init.d/network-manager restart

App_service
Logical_group
Logical_servicesdf


gunicorn -w 1 -b 0.0.0.0:9988 wsgi:application --access-logfile /usr/local/spm-api/var/log/gunicorn-access.log --error-logfile /usr/local/spm-api/var/log/gunicorn-error.log --log-level info --worker-class gevent


docker run --privileged=true -d --name=MyCentos7 -p 9988:9988 -p 63737:22 -p 3307:3306 -p 80:80 wahaha00/my-centos-7-ssh:v2.0 /usr/sbin/init
docker exec -it MyCentos7 /bin/bash


./deploy.sh --domain=analysis-api.uskycdn.com --env=prod
./deploy.sh --domain spm-api.uskycdn.com --env prod


pkill -9 gunicorn; source /data/spm/bin/activate && cd /usr/local/spm-api/bin/spm/ && gunicorn -w 1 -b 0.0.0.0:9988 wsgi:application --access-logfile /usr/local/spm-api/var/log/gunicorn-access.log --error-logfile /usr/local/spm-api/var/log/gunicorn-error.log --log-level info --worker-class gevent

chmod 777 /usr/local/spm-api/misc/* -R

mysql -uroot -pusky@456321 -e "delete from mysql.user where User='usky';" && mysql -uroot -pusky@456321 -e "drop database spm;"


