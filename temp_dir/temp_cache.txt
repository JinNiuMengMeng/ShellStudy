# ssh
补充ssh -D 代码的事情
可以运行
ssh -D 10023 root@ip
然后在浏览器中设置  sockect  127.0.0.1  10023 代理即可
ssh -qTfnN -D 7070  root@ip     #建立一个通道

pip3 install pycrypto


libmysqlclient-dev mysql-dev python-dev python-mysqldb libssl-dev

http://archive.cloudera.com/cdh5/cdh/5/


# ---- 关闭 supervisord 与 uwsgi, 并删掉 supervisor.sock 否则无法启动 ----
ps -aux | grep "supervisord" |grep -v grep| cut -c 9-15 | xargs kill -9; ps -aux | grep "uwsgi" | grep -v grep | cut -c 9-15 | xargs kill -9; rm -rf /tmp/supervisor.sock; rm -rf /opt/logFilter/uwsgi/uwsgi.pid

# ----- uwsgi.ini 文件启动 ------
/home/ubuntu/Env/parkingPy27env/bin/uwsgi --ini /home/ubuntu/PycharmProjects/LuQiao/parking2.0/uwsgi/uwsgi.ini

# ----- gunicorn 命令启动 -------
/home/ubuntu/Env/parkingPy27env/bin/gunicorn --chdir "/home/ubuntu/PycharmProjects/LuQiao/parking2.0" -w 1 -b 0.0.0.0:8000 manage:appWeb --worker-class eventlet --log-level debug --backlog 2000 --access-logfile "/home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/access.log" --error-logfile "/home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/error.log"

# ----- gunicorn 指定文件启动 -------
/home/ubuntu/Env/parkingPy27env/bin/gunicorn manage:appWeb -c /home/ubuntu/PycharmProjects/LuQiao/parking2.0/gunicorn/gunicorn.conf

pip3 list --format=columns

UPDATE yilu_park.usr_privilege SET url=REPLACE(url, '替换前的值', '替换后的值') WHERE code LIKE "3455-01-01%";
UPDATE yilu_park.usr_privilege SET name='添加', menu_label='添加', target=NULL, remarks=NULL, modify_time=NULL WHERE (code='1aaad2af09c5f7dbe718014f4626a6b8');


赛斯因弗，回复“woodpecker”或者获得woodpecker下载链接。
智能触发器和auto js
virscan查毒报告：http://r.virscan.org/language/zh-cn/report/c4a13a06949471a8788a4b32sup	c19a7174d  
哈勃分析系统：https://habo.qq.com/file/showdetail?pk=ADcGZ11oB2MIPVs6U2Y%3D

------------------------------temp------------------------
17楼wifi密码: usky05922226199@%2
15楼WiFi密码: 05922226199
svn账号密码: xiezh   ytkj@Xzh239@
svn://172.16.16.100/cdnrepo/02-code/gslb-analysis-api
svn://172.16.16.100/cdnrepo/02-code/py
svn://172.16.16.100/cdnrepo/01-docs/API/spm
svn://172.16.16.100/cdnrepo/02-code/spm-api
svn://172.16.16.100/cdnrepo/02-code/msp-api

VPN: IP:117.30.209.252   username:uskydvpn    password:uskyipsec4ytkj

spm地址: 
151数据库: mysql -uusky -pusky@123456
docker机: root  usky666!#%
堡垒机账号: xiezh  xiezhaoheng
mysql -h 103.118.36.210 -u usky -pusky@123456

---------------msp-------------

./deploy.sh --domain msp-api.uskycdn.com --env prod

python manage.py get_big_data_info --settings settings.prod

gunicorn -w 1 -b 0.0.0.0:9988 wsgi:application --access-logfile "/usr/local/gslb-msp-api/var/log/gunicorn-access.log" --error-logfile "/usr/local/gslb-msp-api/var/log/gunicorn-error.log" --log-level info --worker-class gevent

---------------spm-------------
python manage.py get_info --settings settings.prod

gunicorn -w 1 -b 0.0.0.0:9988 wsgi:application --access-logfile "/usr/local/spm-api/var/log/gunicorn-access.log" --error-logfile "/usr/local/spm-api/var/log/gunicorn-error.log" --log-level info --worker-class gevent

./deploy.sh --domain spm-api.uskycdn.com --env prod --dbhost 127.0.0.1
./deploy.sh --domain spm-api.uskycdn.com --env prod --dbhost mysql.spm.uskycdn.com

echo "" > /usr/local/spm-api/var/log/gunicorn-access.log && echo "" > /usr/local/spm-api/var/log/gunicorn-error.log && echo "" > /usr/local/spm-api/var/log/account.log && pkill -9 gunicorn; source /data/spm/bin/activate && cd /usr/local/spm-api/bin/spm/ && find ./ -name "*.pyc" | xargs rm; gunicorn -w 8 -b 0.0.0.0:9988 wsgi:application  --access-logfile /usr/local/spm-api/var/log/gunicorn-access.log --error-logfile /usr/local/spm-api/var/log/gunicorn-error.log --log-level info --worker-class gevent


echo "" > account.log; echo "" > deploy.log; echo "" > error.log; echo "" > exception.log; echo "" > gunicorn-access.log; echo "" > gunicorn-error.log; echo "" > gunicorn-supervisor-api.log; echo "" > gunicorn-supervisor-system.log; echo "" > insert_query_log.log ; echo "" > log-collect.log; echo "" > monitor.log; echo "" > start_get_big_data.log; echo "" > start_load_data.log; echo "" > system.log

apt-cache depends netease-cloud-music

rm -rf ./apps/account/migrations/ ./apps/monitor/migrations/ ./apps/query/migrations/ ./apps/system/migrations/
时间规划局+前目的地

python manage.py migrate --settings settings.prod
python manage.py makemigrations --settings settings.prod
python manage.py init_apis --settings settings.prod
./deploy.sh --domain msp-api.uskycdn.com --env dev --operation update --dbhost 192.168.0.240
./deploy.sh --domain spm-api.uskycdn.com --env dev --operation update --dbhost 127.0.0.1
source /root/virtualenvs/msp/bin/activate && cd /usr/local/msp-api/bin/msp/
source /data/spm/bin/activate && cd /usr/local/spm-api/bin/spm

https://jinniumengmeng.github.io/my_gitbook/
https://wahaha00.gitee.io/my_gitbook/
 Tor 暗网代理、Socks 代理等。
 讯代理、阿布云代理、芝麻代理等
 ADSL拨号代理, 云立方

----------------------------------------------------------------

prod和dev 的 数据库域名 改为mysql.msp.uskycdn.com   部署时用的域名 改为 msp-api.uskycdn.com 
游天云的 用mysql.msp.utcache.com     msp-api.utcache.com



|参数名|类型|是否是必填参数|说明|
|:-----  |:-----|-----  |---|
|datefrom |float|NO   |开始时间戳|
|dateto |float |NO  |截止时间戳|
|customer-id |int |NO  |用户编号|
|node |string |NO  |搜索的节点，默认返回全部节点|
|timezone |string  |NO |默认Asia/Shanghai|

攻击次数趋势和CC攻击总次数   次数  http://192.168.0.232:8033/api/report/attack/count/trend

攻击IP数趋势图   IP http://192.168.0.232:8033/api/report/attack/cip/trend



ps -aux `| grep "rabbitmq_recv_send.py" `|grep -v grep`| cut -c 9-15 `| xargs kill -9
find ./ -name "*.pyc" | xargs rm

CONF_DIR="/usr/local/refreshserver/etc"
/usr/local/refreshserver/log/

import logging
from logging.handlers import TimedRotatingFileHandler

WORKSPACE_DIR = '/usr/local/refreshserver'
os.path.join(WORKSPACE_DIR+'/log/rabbit_mq_recv_send.log'),

<div class="layout-grid-find" id="live">
<div class="layout-grid-find" id="notStart">
<div class="layout-grid-find" id="finished">

1. 修改spm中cdn流量详情返回的数据格式
2. 修改路由与营运商update接口, 修复参数判断与赋值的bug
3. 重新测试基础数据管理中路由与营运商增删改查等接口, 并完善对应的接口文档

常用的一般都是使用BeautifSoup、requests搭配组合抓取静态页面，即网页上显示的数据都可以在html源码中找到，而不是网站通过js或者ajax异步加载的，这种类型的网站数据爬取起来较简单。但是有些网站上的数据是通过执行js代码来更新的，这时传统的方法就不是那么适用了

适用selenium模拟浏览器行为更新网页获取更新后的数据

MongoDB、Redis
pip install selenium

另一个是PhantomJS，这是一个无界面的,可脚本编程的WebKit浏览器引擎，百度进行搜索，在其官网下进行下载，下载后无需安装，放到指定路径下，在使用时只需指定文件所在路径即可。

pip3 install fake-useragent
pip install lxml

from fake_useragent import UserAgent
ua = UserAgent()\\\、
print(ua.random)

headers = {'User-Agent': ua.random}

页面url拼接

/home/ubuntu/svn_project/msp-api/trunk/bin/msp/apps/query/services.py +406



INSERT INTO juniuhui.user_info (`id`, `user_name`, `user_position`, `user_team`, `user_address`, `user_seniority`, `user_order`, `user_skills`, `user_charges`, `user_instroduce`, `user_product`, `user_instrodcue_num`, `user_url`) VALUES ('1', NULL, NULL, NULL, NULL, '0', NULL, NULL, '0', NULL, NULL, NULL, NULL);
